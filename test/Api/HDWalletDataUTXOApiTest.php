<?php
/**
 * HDWalletDataUTXOApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  CryptoapisApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2024-12-12
 * Contact: developers@cryptoapis.io
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace CryptoapisApiClient\Test\Api;

use \CryptoapisApiClient\Configuration;
use \CryptoapisApiClient\ApiException;
use \CryptoapisApiClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * HDWalletDataUTXOApiTest Class Doc Comment
 *
 * @category Class
 * @package  CryptoapisApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class HDWalletDataUTXOApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for deriveAndSyncNewChangeAddressesUTXO
     *
     * Derive And Sync New Change Addresses UTXO.
     *
     */
    public function testDeriveAndSyncNewChangeAddressesUTXO()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deriveAndSyncNewReceivingAddressesUTXO
     *
     * Derive And Sync New Receiving Addresses UTXO.
     *
     */
    public function testDeriveAndSyncNewReceivingAddressesUTXO()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getHDWalletXPubYPubZPubAssetsUTXO
     *
     * Get HD Wallet (xPub, yPub, zPub) Assets UTXO.
     *
     */
    public function testGetHDWalletXPubYPubZPubAssetsUTXO()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getHDWalletXPubYPubZPubDetailsUTXO
     *
     * Get HD Wallet (xPub, yPub, zPub) Details UTXO.
     *
     */
    public function testGetHDWalletXPubYPubZPubDetailsUTXO()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listHDWalletXPubYPubZPubTransactionsUTXO
     *
     * List HD Wallet (xPub, yPub, zPub) Transactions UTXO.
     *
     */
    public function testListHDWalletXPubYPubZPubTransactionsUTXO()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listHDWalletXPubYPubZPubUTXOs
     *
     * List HD Wallet (xPub, yPub, zPub) UTXOs.
     *
     */
    public function testListHDWalletXPubYPubZPubUTXOs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listSyncedAddressesUTXO
     *
     * List Synced Addresses UTXO.
     *
     */
    public function testListSyncedAddressesUTXO()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for prepareAUTXOBasedTransactionFromHDWalletXPubYPubZPub
     *
     * Prepare A UTXO-Based Transaction From HD Wallet (xPub, yPub, zPub).
     *
     */
    public function testPrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPub()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
