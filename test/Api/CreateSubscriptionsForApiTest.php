<?php
/**
 * CreateSubscriptionsForApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  CryptoapisApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2024-12-12
 * Contact: developers@cryptoapis.io
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace CryptoapisApiClient\Test\Api;

use \CryptoapisApiClient\Configuration;
use \CryptoapisApiClient\ApiException;
use \CryptoapisApiClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CreateSubscriptionsForApiTest Class Doc Comment
 *
 * @category Class
 * @package  CryptoapisApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CreateSubscriptionsForApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for minedTransaction
     *
     * Mined Transaction.
     *
     */
    public function testMinedTransaction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for newBlock
     *
     * New Block.
     *
     */
    public function testNewBlock()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for newConfirmedCoinsTransactions
     *
     * New Confirmed Coins Transactions.
     *
     */
    public function testNewConfirmedCoinsTransactions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for newConfirmedCoinsTransactionsAndEachConfirmation
     *
     * New Confirmed Coins Transactions And Each Confirmation.
     *
     */
    public function testNewConfirmedCoinsTransactionsAndEachConfirmation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for newConfirmedInternalTransactions
     *
     * New Confirmed Internal Transactions.
     *
     */
    public function testNewConfirmedInternalTransactions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for newConfirmedInternalTransactionsAndEachConfirmation
     *
     * New Confirmed Internal Transactions And Each Confirmation.
     *
     */
    public function testNewConfirmedInternalTransactionsAndEachConfirmation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for newConfirmedTokensTransactions
     *
     * New Confirmed Tokens Transactions.
     *
     */
    public function testNewConfirmedTokensTransactions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for newConfirmedTokensTransactionsAndEachConfirmation
     *
     * New Confirmed Tokens Transactions And Each Confirmation.
     *
     */
    public function testNewConfirmedTokensTransactionsAndEachConfirmation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for newUnconfirmedCoinsTransactions
     *
     * New Unconfirmed Coins Transactions.
     *
     */
    public function testNewUnconfirmedCoinsTransactions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
