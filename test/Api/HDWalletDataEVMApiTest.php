<?php
/**
 * HDWalletDataEVMApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  CryptoapisApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2024-12-12
 * Contact: developers@cryptoapis.io
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace CryptoapisApiClient\Test\Api;

use \CryptoapisApiClient\Configuration;
use \CryptoapisApiClient\ApiException;
use \CryptoapisApiClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * HDWalletDataEVMApiTest Class Doc Comment
 *
 * @category Class
 * @package  CryptoapisApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class HDWalletDataEVMApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for deriveAndSyncNewReceivingAddressesEVM
     *
     * Derive And Sync New Receiving Addresses EVM.
     *
     */
    public function testDeriveAndSyncNewReceivingAddressesEVM()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getHDWalletXPubYPubZPubAssetsEVM
     *
     * Get HD Wallet (xPub, yPub, zPub) Assets EVM.
     *
     */
    public function testGetHDWalletXPubYPubZPubAssetsEVM()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getHDWalletXPubYPubZPubDetailsEVM
     *
     * Get HD Wallet (xPub, yPub, zPub) Details EVM.
     *
     */
    public function testGetHDWalletXPubYPubZPubDetailsEVM()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listHDWalletXPubYPubZPubTransactionsEVM
     *
     * List HD Wallet (xPub, yPub, zPub) Transactions EVM.
     *
     */
    public function testListHDWalletXPubYPubZPubTransactionsEVM()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listSyncedAddressesEVM
     *
     * List Synced Addresses EVM.
     *
     */
    public function testListSyncedAddressesEVM()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for prepareATransactionFromAnAddressInHDWalletXPubYPubZPubEVM
     *
     * Prepare A Transaction From an Address in HD Wallet (xPub, yPub, zPub) EVM.
     *
     */
    public function testPrepareATransactionFromAnAddressInHDWalletXPubYPubZPubEVM()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
